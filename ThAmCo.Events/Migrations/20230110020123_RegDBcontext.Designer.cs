// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Events.Data;

#nullable disable

namespace ThAmCo.Events.Migrations
{
    [DbContext(typeof(EventsContext))]
    [Migration("20230110020123_RegDBcontext")]
    partial class RegDBcontext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("ThAmCo.Events.Data.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CateringMenu")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("EventTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("VenueReservationReference")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cancelled = false,
                            CateringMenu = 0,
                            Date = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 9, 0, 0, 0),
                            EventTypeId = "Wedding",
                            Title = "John Smith's Wedding"
                        },
                        new
                        {
                            Id = 2,
                            Cancelled = false,
                            CateringMenu = 0,
                            Date = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 3, 0, 0, 0),
                            EventTypeId = "Wedding",
                            Title = "Jim Phillips' Golf Club Bash"
                        },
                        new
                        {
                            Id = 3,
                            Cancelled = false,
                            CateringMenu = 0,
                            Date = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 6, 0, 0, 0),
                            EventTypeId = "HenParty",
                            Title = "Silly Sally's Hen Party"
                        },
                        new
                        {
                            Id = 4,
                            Cancelled = false,
                            CateringMenu = 0,
                            Date = new DateTime(2022, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 3, 30, 0, 0),
                            EventTypeId = "Party",
                            Title = "Mike Trouble's Prison Release Party"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Payment")
                        .HasMaxLength(8)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            EmailAddress = "JSmith@outlook.com",
                            Forename = "John",
                            Payment = 123456,
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            EmailAddress = "JPhillips@hotmail.com",
                            Forename = "Jim",
                            Payment = 1234567,
                            Surname = "Phillips"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            EmailAddress = "SillySally@googlemail.com",
                            Forename = "Sally",
                            Payment = 2345678,
                            Surname = "Simpson"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = true,
                            EmailAddress = "MTrouble@protonmail.com",
                            Forename = "Mike",
                            Payment = 654321,
                            Surname = "Trouble"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.GuestBooking", b =>
                {
                    b.Property<int>("GuestId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<bool>("Attended")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuestId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("GuestBookings");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            EventId = 1,
                            Attended = true
                        },
                        new
                        {
                            GuestId = 2,
                            EventId = 2,
                            Attended = true
                        },
                        new
                        {
                            GuestId = 3,
                            EventId = 3,
                            Attended = false
                        },
                        new
                        {
                            GuestId = 4,
                            EventId = 4,
                            Attended = false
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("FirstAidQulaified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "FNightingale@Gmail.com",
                            FirstAidQulaified = false,
                            Name = "Florence Nightingale",
                            Role = "Security"
                        },
                        new
                        {
                            Id = 2,
                            Email = "TTTed@hotmail.com",
                            FirstAidQulaified = true,
                            Name = "Ted Bundy",
                            Role = "Bar Staff"
                        },
                        new
                        {
                            Id = 3,
                            Email = "BLee@email.com",
                            FirstAidQulaified = false,
                            Name = "Bruce Lee",
                            Role = "Waiter"
                        },
                        new
                        {
                            Id = 4,
                            Email = "JBloggs@msn.com",
                            FirstAidQulaified = true,
                            Name = "Joe Bloggs",
                            Role = "Waiter"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staffing", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("StaffId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("Staffing");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            EventId = 1
                        },
                        new
                        {
                            StaffId = 2,
                            EventId = 2
                        },
                        new
                        {
                            StaffId = 3,
                            EventId = 3
                        },
                        new
                        {
                            StaffId = 3,
                            EventId = 1
                        },
                        new
                        {
                            StaffId = 1,
                            EventId = 4
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Data.GuestBooking", b =>
                {
                    b.HasOne("ThAmCo.Events.Data.Event", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Data.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staffing", b =>
                {
                    b.HasOne("ThAmCo.Events.Data.Event", "Event")
                        .WithMany("Staff")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Data.Staff", "Staff")
                        .WithMany("Events")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Event", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("ThAmCo.Events.Data.Staff", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
